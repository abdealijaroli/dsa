/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *h) {
        ListNode *slow = h; 
        ListNode *fast = h;
        
        while(slow and fast and fast->next != NULL){
            slow = slow->next;
            fast = fast->next->next;
            
            if(slow == fast){
                return true;
            }
        }
        
        return false;   
        
        
//         unordered_set<ListNode *> s;
        
//         while(h != NULL){
//             if(s.find(h) != s.end()){
//                 return true;
//             }
//             s.insert(h);
//             h = h->next;
//         }
        
//         return false;
    }
};
